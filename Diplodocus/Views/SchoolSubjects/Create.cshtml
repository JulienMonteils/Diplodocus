@model Diplodocus.Models.SchoolSubject

@{
    Layout = "~/Views/Shared/LoginLayout.cshtml";
    if (Session["ManagerId"] == null)
    {
        Response.Redirect("~/Users/Login");
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Création d'une matière</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
      
    <div class="form-horizontal">
        <h4>SchoolSubject</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Nom de la matière </label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            var selectListFloor = new SelectList(new[]
                           {
                                      new{ID="1",Name="1"},
                                      new{ID="2",Name="2"},
                                      new{ID="3",Name="3"},
                                      new{ID="4",Name="4"},
                                      new{ID="5",Name="5"},
                                      new{ID="6",Name="6"},
                                      new{ID="7",Name="7"},
                                      new{ID="8",Name="8"},
                                      new{ID="9",Name="9"},
                                      new{ID="10",Name="10"},
                                      new{ID="11",Name="11"},
                                      new{ID="12",Name="12"},
                                      new{ID="13",Name="13"},
                                      new{ID="14",Name="14"},
                                      new{ID="15",Name="15"},
                                      new{ID="16",Name="16"},
                                      new{ID="17",Name="17"},
                                      new{ID="18",Name="18"},
                                      new{ID="19",Name="19"},
                                      new{ID="20",Name="20"},
                                  },
             "ID", "Name", 1);
        }

         
          
                <div class="form-group">
                    <label class="control-label col-md-2">Seuil </label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SubjectMarkFloor, selectListFloor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubjectMarkFloor, "", new { @class = "text-danger" })
                    </div>
                </div>
                @{var selectList = new SelectList(new List<SelectListItem> { new SelectListItem { Text = "1", Value = "1" }, new SelectListItem { Text = "2", Value = "2" }, }, "Value", "Text"); }
                <div class="form-group">
                    <label class="control-label col-md-2">Semestre </label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Semester, selectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Semester, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Rattrapable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Rattrapable)
                            @Html.ValidationMessageFor(model => model.Rattrapable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Nom de la filière </label>
                    <div class="col-md-10">
                        @Html.DropDownList("GradeIdGrade", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GradeIdGrade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Coef, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Coef, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Coef, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Ajouter" class="btn btn-default" />
                    </div>
                </div>
            </div>
            }

            <div>
                @Html.ActionLink("Retour", "Index")
            </div>
</body>
</html>
